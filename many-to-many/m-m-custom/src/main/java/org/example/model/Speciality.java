package org.example.model;

import jakarta.persistence.*;
import lombok.*;
import org.hibernate.annotations.BatchSize;

import java.util.ArrayList;
import java.util.List;

/**
 * <pre>
 * CREATE TABLE specialties (
 *     id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
 * )
 */
@Entity
@Table(name = "specialties")
@NoArgsConstructor @AllArgsConstructor
@Getter @Setter
@ToString
public class Speciality {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer id;

    @OneToMany(mappedBy = "speciality", cascade = CascadeType.ALL, orphanRemoval = true)
    @BatchSize(size = 20)  // To mitigate "N+1", when "personsSpecialties" are fetched for "specialties"
    @Getter(AccessLevel.PROTECTED)
    @Setter(AccessLevel.PROTECTED)
    @ToString.Exclude
    private List<PersonSpeciality> personsSpecialties = new ArrayList<>();


    // Utility methods that synchronize both ends whenever a parent element is retrieved
    public List<Person> getPersons() {
        return personsSpecialties.stream()
                .map(PersonSpeciality::getPerson)
                .distinct()
                .toList();
    }
}
